const > let > var ( try not to use var )

const obj = { name: 'ana' };

obj.name = 'Anatol';


// event binding

$el.addEventListener('click', handleClick);

function handleClick (e) {

}


// if you call the dom for elements several times, take into consideration caching them

couter = unique


// this will be called when the browser tab is closed or refreshed
window.unload =  function() {
	// we save to localStorage
}

// we can emplty the inner html of an element by assign it emptly string
<ul>
	<li></li>
	<li></li>
	<li></li>
</ul>

$ul.content = '';


// short if

let a = (condition) ? 'true value' : 'false value';

let a;
if (condition) {
	a = 'true value';
} else {
	a = 'false value';
}

bind, call, apply // change context(this) // https://www.youtube.com/watch?v=fjJoX9F_F5g

const obj = {
	foo: function(first, second, third) {
		console.log(this); // obj
	}
}

console.log(this); // window


// bind
let foo2 = obj.foo.bind({}, 1, 2, 3);
foo2(); // this === {}

// call
obj.foo.call({}, 1,2,3) // this === {}

// apply

obj.foo.apply({}, [1,2,3])


class Boo {

	name = 'ana';
	
	foo() {
		this.name;
		$btn.addEventListener('click', this.handleClick.bind(this))
	}

	
	handleClick(e) {
		console.log(this);
		this.name;
	}

}

